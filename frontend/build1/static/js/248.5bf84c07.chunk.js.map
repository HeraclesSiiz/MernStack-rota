{"version":3,"file":"static/js/248.5bf84c07.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["useCallbackRef","useState","usePrevious","value","ref","useRef","useEffect","current","dataAttr","property","dataProp","resolveContainerRef","document","_ref","canUseDOM","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","window","useWindow","resolvedRef","setRef","earlyRef","nextRef","Context","createContext","undefined","Provider","useContext","contains","context","node","compareDocumentPosition","hasClass","element","className","classList","baseVal","indexOf","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","size","scrollbarSize","recalc","scrollDiv","createElement","style","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","active","nodeName","e","manager","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","defaultProps","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}
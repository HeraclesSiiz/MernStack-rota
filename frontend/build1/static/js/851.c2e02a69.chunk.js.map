{"version":3,"file":"static/js/851.c2e02a69.chunk.js","mappings":"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","sources":["pages/roaster.js","../node_modules/react-bootstrap-time-picker/dist/bundle.js","../node_modules/react-confirm-alert/lib/index.js","../node_modules/time-number/dist/time-number.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBBtnGroup,\r\n  MDBRow,\r\n  MDBCol,\r\n} from \"mdb-react-ui-kit\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { connect } from \"react-redux\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport TimePicker from \"react-bootstrap-time-picker\";\r\n\r\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\r\n\r\nimport { nAllUpd } from \"../store/Actions/BasicAction\";\r\n\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nimport \"./../css/react-confirm-alert.css\";\r\nimport Autocomplete from \"react-autocomplete\";\r\n\r\nclass Roaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let selMonth =\r\n      new Date().getMonth() - 1\r\n        ? new Date().getMonth() + 1\r\n        : \"0\" + (new Date().getMonth() + 1);\r\n    this.state = {\r\n      isEditable: false,\r\n      selPatient: 0,\r\n      selPatientValue: \"\",\r\n      perPatient: false,\r\n      selYear: new Date().getFullYear(),\r\n      selMonth: selMonth,\r\n      assigns: [],\r\n      assignPerDay: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  viewPerPatient = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      perPatient: !this.state.perPatient,\r\n    });\r\n  };\r\n  getTotals(data, key) {\r\n    let total = 0;\r\n    data.forEach((item) => {\r\n      total += item[key] ? item[key] : 0;\r\n    });\r\n    return total;\r\n  }\r\n\r\n  save = () => {\r\n    const { basic } = this.props;\r\n    const {\r\n      isEditable,\r\n      selPatient,\r\n      selYear,\r\n      perPatient,\r\n      selPatientValue,\r\n      selMonth,\r\n      assigns,\r\n    } = this.state;\r\n    if (isEditable) {\r\n      const _self = this;\r\n      this.setState({\r\n        ...this.state,\r\n        isEditable: false,\r\n      });\r\n\r\n      const { requestblocks } = this.props.basic;\r\n      console.log(requestblocks);\r\n      if(requestblocks.length !== 0){\r\n        toastr.clear();\r\n        setTimeout(() => toastr.warning(\"This item cannot be requested! Please wait until approver approve the transfer request.\"), 300);\r\n        return;\r\n      }\r\n      axios\r\n        .post(\"rota/assign\", {\r\n          patient_id: selPatient,\r\n          year: selYear,\r\n          month: selMonth,\r\n          assignData: assigns,\r\n        })\r\n        .then(function (response) {\r\n          let res = response.data;\r\n          if(res.state == \"error\"){\r\n            toastr.clear();\r\n            setTimeout(() => toastr.info(\"roaster edit request error!\"), 3000);\r\n          }\r\n        })\r\n        .catch(function (error) {});\r\n    } else {\r\n      let assigns = [];\r\n      let assignPerDay = [];\r\n      let newAssign = [];\r\n      let month = selYear + \"-\" + selMonth;\r\n      let daysInMonth = new Date(selYear, selMonth, 0).getDate();\r\n\r\n      if (selPatient !== 0) {\r\n        for (let i = 0; i < daysInMonth; i++) {\r\n          assignPerDay[i + 1] = 0;\r\n        }\r\n\r\n        basic.nurses.map((nurse, nurseIndex) => {\r\n          nurse.rota.map((rota, rotaIndex) => {\r\n            if (rota.patient_id == selPatient && rota.date.includes(month)) {\r\n              let day = rota.date.slice(8) * 1;\r\n              assignPerDay[day]++;\r\n              assigns.push({\r\n                date: rota.date,\r\n                day: day,\r\n                nurse_name: nurse.name,\r\n                nurse_short_id: nurse._id.slice(20),\r\n                nurse_id: nurse._id,\r\n                designation: nurse.level == 0 ? \"Registered\" : \"Assistant\",\r\n                duty_start: rota.duty_start,\r\n                duty_end: rota.duty_end,\r\n                hour: rota.hour,\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        for (let i = 0; i < daysInMonth; i++) {\r\n          if (assignPerDay[(i + 1) * 1] == 0) {\r\n            assignPerDay[(i + 1) * 1] = 1;\r\n            newAssign.date =\r\n              month + \"-\" + (i < 9 ? +\"0\" + String(i + 1) : i + 1);\r\n            newAssign.day = (i + 1) * 1;\r\n            newAssign.nurse_name = \"NA\";\r\n            newAssign.nurse_short_id = \"NA\";\r\n            newAssign.nurse_id = \"NA\";\r\n            newAssign.designation = \"NA\";\r\n            newAssign.duty_start = \"NA\";\r\n            newAssign.duty_end = \"NA\";\r\n            newAssign.hour = \"NA\";\r\n\r\n            assigns = [...assigns, { ...newAssign }];\r\n          }\r\n        }\r\n        assigns.sort((a, b) =>\r\n          a.date > b.date\r\n            ? 1\r\n            : b.date > a.date\r\n            ? -1\r\n            : a.duty_start > b.duty_start\r\n            ? 1\r\n            : b.duty_start > a.duty_start\r\n            ? -1\r\n            : 0\r\n        );\r\n\r\n        let total = 0;\r\n        for (var i in assignPerDay) {\r\n          for (var j = 1; j <= assignPerDay[i]; j++) {\r\n            assigns[total].rotation = j;\r\n            total++;\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          ...this.state,\r\n          isEditable: true,\r\n          assigns: [...assigns],\r\n          assignPerDay: [...assignPerDay],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  multiAssign = (e, row) => {\r\n    const { selYear, selMonth, assigns, assignPerDay } = this.state;\r\n\r\n    let selMultiDay = row.day;\r\n    let month = selYear + \"-\" + selMonth;\r\n\r\n    let newAssign = {};\r\n    newAssign.date =\r\n      month +\r\n      \"-\" +\r\n      (selMultiDay < 9 ? +\"0\" + String(selMultiDay) : selMultiDay);\r\n    newAssign.day = selMultiDay;\r\n    newAssign.rotation = assignPerDay[selMultiDay] + 1;\r\n    newAssign.nurse_name = \"NA\";\r\n    newAssign.nurse_name = \"NA\";\r\n    newAssign.nurse_short_id = \"NA\";\r\n    newAssign.nurse_id = \"NA\";\r\n    newAssign.designation = \"NA\";\r\n    newAssign.duty_start = \"NA\";\r\n    newAssign.duty_end = \"NA\";\r\n    newAssign.hour = \"NA\";\r\n\r\n    let n = 0;\r\n    assignPerDay[selMultiDay]++;\r\n    for (let i = 1; i < selMultiDay * 1 + 1; i++) {\r\n      n += assignPerDay[i];\r\n    }\r\n    assigns.splice(n - 1, 0, newAssign);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      assigns: [...assigns],\r\n      assignPerDay: [...assignPerDay],\r\n    });\r\n  };\r\n  multiRemove = (e, row) => {\r\n    const { assigns, assignPerDay } = this.state;\r\n\r\n    let selMultiDay = row.day;\r\n    let n = 0;\r\n    for (let i = 1; i < selMultiDay; i++) {\r\n      n += assignPerDay[i];\r\n    }\r\n\r\n    if (assignPerDay[selMultiDay] == 1) {\r\n      assigns[n].nurse_name = \"NA\";\r\n      assigns[n].nurse_short_id = \"NA\";\r\n      assigns[n].nurse_id = \"NA\";\r\n      assigns[n].designation = \"NA\";\r\n      assigns[n].duty_start = \"NA\";\r\n      assigns[n].duty_end = \"NA\";\r\n      assigns[n].hour = \"NA\";\r\n      this.setState({\r\n        ...this.state,\r\n        assigns: [...assigns],\r\n      });\r\n    } else {\r\n      for (let j = 0; j < assignPerDay[selMultiDay]; j++) {\r\n        if (j == row.rotation - 1) {\r\n          assigns.splice(n + j, 1);\r\n        } else if (j >= row.rotation) {\r\n          assigns[n + j - 1].rotation--;\r\n        }\r\n      }\r\n      assignPerDay[selMultiDay]--;\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        assigns: [...assigns],\r\n        assignPerDay: [...assignPerDay],\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangePatient = (e) => {\r\n    // console.log(e.target);\r\n    this.setState({\r\n      ...this.state,\r\n      selPatient: 0,\r\n      selPatientValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSelectPatient = (val, item) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selPatient: item.key,\r\n      selPatientValue: val,\r\n    });\r\n  };\r\n  onChangeYear = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selYear: e.target.value,\r\n      isEditable: false,\r\n    });\r\n  };\r\n  onChangeMonth = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selMonth: e.target.value,\r\n      isEditable: false,\r\n    });\r\n  };\r\n  onChangeMultiDay = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selMultiDay: e.target.value,\r\n    });\r\n  };\r\n  onChangeNurse = (e, row) => {\r\n    const { basic } = this.props;\r\n    let { assigns } = this.state;\r\n\r\n    assigns.map((assign, assignIndex) => {\r\n      if (assign.day == row.day && assign.rotation == row.rotation) {\r\n        basic.nurses.map((nurse, index) => {\r\n          if (nurse._id == e.target.value) {\r\n            assigns[assignIndex].nurse_name = nurse.name;\r\n            assigns[assignIndex].nurse_id = nurse._id;\r\n            assigns[assignIndex].nurse_short_id = nurse._id.slice(20);\r\n            assigns[assignIndex].designation =\r\n              nurse.level == 0 ? \"Registered\" : \"Assistant\";\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      assigns: [...assigns],\r\n    });\r\n  };\r\n  onChangeDutyStart = (e, row) => {\r\n    const { basic } = this.props;\r\n    let { assigns, selPatient } = this.state;\r\n    var _self = this;\r\n    var hour =\r\n      parseInt(e / 3600) > 9 ? parseInt(e / 3600) : \"0\" + parseInt(e / 3600);\r\n    var min = e % 3600 == 0 ? \"00\" : \"30\";\r\n    var _start = hour + \":\" + min;\r\n    var _end, _hour;\r\n    if (hour >= 12) {\r\n      _end = \"23:30\";\r\n      _hour = 23 - hour;\r\n    } else {\r\n      _end = hour + 12 + \":\" + min;\r\n      _hour = 12;\r\n    }\r\n    var rotas;\r\n    var isduplicate = false;\r\n\r\n    var assignCount = assigns.length;\r\n    var isAssign = false;\r\n\r\n    let step = function () {\r\n      return new Promise(function (resolve) {\r\n        assigns.map((assign, index) => {\r\n          if (\r\n            assign.rotation !== row.rotation &&\r\n            assign.date == row.date &&\r\n            assign.duty_start < _start &&\r\n            assign.duty_end > _start\r\n          ) {\r\n            isAssign = true;\r\n            toastr.info(\r\n              \"Already Assign Hour in rotation\" + assign.rotation + \"!\"\r\n            );\r\n          }\r\n          if (index == assignCount - 1 && isAssign == false) {\r\n            resolve();\r\n          }\r\n        });\r\n      }).then(function () {\r\n        return new Promise(function (resolve) {\r\n          basic.nurses.map((nurse) => {\r\n            if (nurse._id == row.nurse_id) {\r\n              rotas = nurse.rota.length;\r\n              if (rotas == 0) {\r\n                resolve();\r\n              }\r\n              nurse.rota.map((rota, rotaIndex) => {\r\n                if (\r\n                  rota.date == row.date &&\r\n                  rota.duty_start < _start &&\r\n                  rota.duty_end > _start\r\n                ) {\r\n                  isduplicate = true;\r\n                  basic.patients.map((patient) => {\r\n                    if (\r\n                      rota.patient_id != selPatient &&\r\n                      rota.patient_id == patient._id\r\n                    ) {\r\n                      confirmAlert({\r\n                        title: \"Duplicate Time\",\r\n                        message:\r\n                          \"Nurse is allocated for \" +\r\n                          rota.duty_start +\r\n                          \" to \" +\r\n                          rota.duty_end +\r\n                          \" to \" +\r\n                          patient.name +\r\n                          \". You want to overwrite?\",\r\n                        buttons: [\r\n                          {\r\n                            label: \"Yes\",\r\n                            onClick: () => {\r\n                              resolve();\r\n                            },\r\n                          },\r\n                          {\r\n                            label: \"No\",\r\n                            onClick: () => {},\r\n                          },\r\n                        ],\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                if (rotaIndex == rotas - 1 && isduplicate == false) {\r\n                  resolve();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }).then(function () {\r\n          assigns.map((assign, assignIndex) => {\r\n            if (assign.day == row.day && assign.rotation == row.rotation) {\r\n              basic.nurses.map((nurse) => {\r\n                if (nurse._id == row.nurse_id) {\r\n                  assigns[assignIndex].duty_start = _start;\r\n                  assigns[assignIndex].duty_end = _end;\r\n                  assigns[assignIndex].hour = _hour;\r\n                }\r\n              });\r\n            }\r\n          });\r\n\r\n          _self.setState({\r\n            ..._self.state,\r\n            assigns: [...assigns],\r\n          });\r\n        });\r\n      });\r\n    };\r\n    step();\r\n  };\r\n  onChangeDutyEnd = (e, row) => {\r\n    const { basic } = this.props;\r\n    let { assigns, selPatient } = this.state;\r\n    var _self = this;\r\n    var hour =\r\n      parseInt(e / 3600) > 9 ? parseInt(e / 3600) : \"0\" + parseInt(e / 3600);\r\n    var min = e % 3600 == 0 ? \"00\" : \"30\";\r\n    var _end = hour + \":\" + min;\r\n    var rotas;\r\n    var isduplicate = false;\r\n\r\n    var assignCount = assigns.length;\r\n    var isAssign = false;\r\n\r\n    let step = function () {\r\n      return new Promise(function (resolve) {\r\n        assigns.map((assign, index) => {\r\n          if (\r\n            assign.rotation !== row.rotation &&\r\n            assign.date == row.date &&\r\n            assign.duty_start != \"NA\" &&\r\n            assign.duty_end != \"NA\" &&\r\n            assign.duty_start < _end &&\r\n            assign.duty_end > row.duty_start\r\n          ) {\r\n            isAssign = true;\r\n            toastr.info(\r\n              \"Already Assign Hour in rotation\" + assign.rotation + \"!\"\r\n            );\r\n          }\r\n          if (index == assignCount - 1 && isAssign == false) {\r\n            resolve();\r\n          }\r\n        });\r\n      }).then(function () {\r\n        return new Promise(function (resolve) {\r\n          basic.nurses.map((nurse) => {\r\n            if (nurse._id == row.nurse_id) {\r\n              rotas = nurse.rota.length;\r\n              if (rotas == 0) {\r\n                resolve();\r\n              }\r\n              nurse.rota.map((rota, rotaIndex) => {\r\n                if (\r\n                  rota.date == row.date &&\r\n                  rota.duty_end > row.duty_start &&\r\n                  rota.duty_start < _end\r\n                ) {\r\n                  basic.patients.map((patient) => {\r\n                    if (\r\n                      rota.patient_id != selPatient &&\r\n                      rota.patient_id == patient._id\r\n                    ) {\r\n                      isduplicate = true;\r\n                      confirmAlert({\r\n                        title: \"Duplicate Time\",\r\n                        message:\r\n                          \"Nurse is allocated for \" +\r\n                          rota.duty_start +\r\n                          \" to \" +\r\n                          rota.duty_end +\r\n                          \" to \" +\r\n                          patient.name +\r\n                          \". You want to overwrite?\",\r\n                        buttons: [\r\n                          {\r\n                            label: \"Yes\",\r\n                            onClick: () => {\r\n                              resolve();\r\n                            },\r\n                          },\r\n                          {\r\n                            label: \"No\",\r\n                            onClick: () => {},\r\n                          },\r\n                        ],\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                if (rotaIndex == rotas - 1 && isduplicate == false) {\r\n                  resolve();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }).then(function () {\r\n          assigns.map((assign, assignIndex) => {\r\n            if (assign.day == row.day && assign.rotation == row.rotation) {\r\n              basic.nurses.map((nurse) => {\r\n                if (nurse._id == row.nurse_id) {\r\n                  assigns[assignIndex].duty_end = _end;\r\n                  if (assigns[assignIndex].duty_end != \"NA\") {\r\n                    assigns[assignIndex].hour = Math.abs(\r\n                      assigns[assignIndex].duty_end.split(\":\")[0] -\r\n                        assigns[assignIndex].duty_start.split(\":\")[0]\r\n                    );\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          });\r\n\r\n          _self.setState({\r\n            ..._self.state,\r\n            assigns: [...assigns],\r\n          });\r\n        });\r\n      });\r\n    };\r\n    step();\r\n  };\r\n\r\n  swap(json) {\r\n    let ret = [];\r\n    for (var key in json) {\r\n      ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render() {\r\n    const { basic } = this.props;\r\n    const {user} = this.props.basic;\r\n    const {\r\n      selPatient,\r\n      selPatientValue,\r\n      selYear,\r\n      selMonth,\r\n      perPatient,\r\n      isEditable,\r\n      assigns,\r\n      assignPerDay,\r\n    } = this.state;\r\n    let assignColumns = [];\r\n    let assignDatas = [];\r\n    let assignPerDayDatas = [];\r\n    let newAssign = [];\r\n    let assignHour;\r\n    let month = selYear + \"-\" + selMonth;\r\n    let daysInMonth = new Date(selYear, selMonth, 0).getDate();\r\n\r\n    let monthNames = basic.monthNames;\r\n    let monthNumbers = this.swap(monthNames);\r\n\r\n    // console.log(monthNames);\r\n    // let monthObject = {...monthNames};\r\n\r\n    let Mon = Object.keys(monthNames);\r\n    let NoMon = Object.values(monthNames);\r\n\r\n    const MonthSelect = Mon.map((month, index) => (\r\n      <option key={index} value={NoMon[index]}>{month}</option>\r\n    ));\r\n    let thour = 0;\r\n    //get holidays per month\r\n    let holidays = basic.holidays;\r\n    let holidaysPerMonth = [];\r\n    holidays.map((holiday) => {\r\n      if (holiday.slice(0, 2) == selMonth) {\r\n        holidaysPerMonth.push(selYear + \"-\" + holiday);\r\n      }\r\n    });\r\n    //get sundays per month\r\n    let sundaysPerMonth = [];\r\n    let date = selYear + \"-\" + selMonth + \"-01\";\r\n    let firstDate = new Date(date).getDay();\r\n    if (firstDate == 0) {\r\n      firstDate = 1;\r\n    } else {\r\n      firstDate = 7 - firstDate + 1;\r\n    }\r\n    for (let selDay = firstDate; selDay < daysInMonth; selDay += 7) {\r\n      let day = selDay > 9 ? selDay : \"0\" + selDay;\r\n      sundaysPerMonth.push(month + \"-\" + day);\r\n    }\r\n\r\n    if (isEditable) {\r\n      assignColumns = [\r\n        {\r\n          name: \"Date\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.date,\r\n        },\r\n        // {\r\n        //   name: \"Rotation No\",\r\n        //   center:true,\r\n        //   wrap:true,\r\n        //   selector: (row) => row.rotation,\r\n        // },\r\n        {\r\n          name: \"Emp ID\",\r\n          center: true,\r\n          wrap: true,\r\n          with: \"80px\",\r\n          selector: (row) => row.nurse_short_id,\r\n        },\r\n        {\r\n          name: \"Emp Name\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"200px\",\r\n          cell: (row) => (\r\n            <Form.Select\r\n              aria-label=\"patient select\"\r\n              value={row._nurse_id}\r\n              onChange={(e) => this.onChangeNurse(e, row)}\r\n            >\r\n              <option value=\"0\">Select Nurse</option>\r\n              {basic.nurses.map((nurse, index) => {\r\n                //get leavedays per month\r\n                let leaves = nurse.leave ? nurse.leave : [];\r\n                let leavedaysPerMonth = [];\r\n\r\n                for (let leave of leaves) {\r\n                  let from = new Date(leave.from);\r\n                  let to = new Date(leave.to);\r\n                  for (let betweenDay = from; betweenDay <= to; ) {\r\n                    let year = betweenDay.getFullYear();\r\n                    let day =\r\n                      betweenDay.getDate() > 9\r\n                        ? betweenDay.getDate()\r\n                        : \"0\" + betweenDay.getDate();\r\n                    if (\r\n                      year == selYear &&\r\n                      betweenDay.getMonth() + 1 == parseInt(selMonth)\r\n                    ) {\r\n                      leavedaysPerMonth.push(month + \"-\" + day);\r\n                    }\r\n                    betweenDay.setDate(betweenDay.getDate() + 1);\r\n                  }\r\n                }\r\n\r\n                let workingdays = [\r\n                  ...leavedaysPerMonth,\r\n                  ...holidaysPerMonth,\r\n                  ...sundaysPerMonth,\r\n                ];\r\n                workingdays = [...new Set(workingdays)];\r\n                assignHour = (daysInMonth - workingdays.length) * 8;\r\n\r\n                basic.nurses.map((_nurse, index) => {\r\n                  if (_nurse._id == nurse._id) {\r\n                    _nurse.rota.map((rota) => {\r\n                      if (\r\n                        rota.date.includes(month) &&\r\n                        rota.patient_id != selPatient\r\n                      ) {\r\n                        assignHour -= rota.hour;\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n\r\n                assigns.map((assign) => {\r\n                  if (assign.nurse_id == nurse._id && assign.hour != \"NA\") {\r\n                    assignHour -= assign.hour;\r\n                  }\r\n                });\r\n                return (\r\n                  <option\r\n                    key={index}\r\n                    value={nurse._id}\r\n                    className=\"assign\"\r\n                    selected={nurse._id == row.nurse_id ? \"selected\" : \"\"}\r\n                  >\r\n                    {nurse.name}\r\n                    {\"(\" + assignHour + \")\"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Select>\r\n          ),\r\n        },\r\n        {\r\n          name: \"Designation\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"100px\",\r\n          selector: (row) => row.designation,\r\n        },\r\n        {\r\n          name: \"Duty Start\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"140px\",\r\n          cell: (row) => (\r\n            <TimePicker\r\n              step={30}\r\n              value={row.duty_start == \"NA\" ? \"12:00\" : row.duty_start}\r\n              disabled={row.nurse_id == \"NA\" ? \"disabled\" : \"\"}\r\n              onChange={(e) => this.onChangeDutyStart(e, row)}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          name: \"Duty End\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"140px\",\r\n          selector: (row) => (\r\n            <TimePicker\r\n              start={row.duty_start == \"NA\" ? \"00:00\" : row.duty_start}\r\n              step={30}\r\n              value={row.duty_end == \"NA\" ? \"12:00\" : row.duty_end}\r\n              disabled={row.duty_start == \"NA\" ? \"disabled\" : \"\"}\r\n              onChange={(e) => this.onChangeDutyEnd(e, row)}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          name: \"Hour\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"80px\",\r\n          selector: (row) => row.hour,\r\n        },\r\n        {\r\n          name: \"Action\",\r\n          center: true,\r\n          wrap: true,\r\n          width: \"120px\",\r\n          selector: (row) =>\r\n            row.rotation == 1 ? (\r\n              [\r\n                <MDBBtnGroup key={row.leave_id}>\r\n                  <MDBBtn\r\n                    outline\r\n                    floating\r\n                    color=\"success\"\r\n                    size=\"sm\"\r\n                    onClick={(e) => this.multiAssign(e, row)}\r\n                  >\r\n                    <FaPlus />\r\n                  </MDBBtn>\r\n                  <MDBBtn\r\n                    outline\r\n                    floating\r\n                    color=\"success\"\r\n                    size=\"sm\"\r\n                    onClick={(e) => this.multiRemove(e, row)}\r\n                  >\r\n                    <FaMinus />\r\n                  </MDBBtn>\r\n                </MDBBtnGroup>,\r\n              ]\r\n            ) : (\r\n              <MDBBtn\r\n                outline\r\n                floating\r\n                color=\"success\"\r\n                size=\"sm\"\r\n                onClick={(e) => this.multiRemove(e, row)}\r\n              >\r\n                <FaMinus />\r\n              </MDBBtn>\r\n            ),\r\n        },\r\n      ];\r\n\r\n      assignDatas = assigns;\r\n      assignPerDayDatas = assignPerDay;\r\n    } else {\r\n      assignColumns = [\r\n        {\r\n          name: \"Date\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.date,\r\n        },\r\n        {\r\n          name: \"Emp ID\",\r\n          center: true,\r\n          wrap: true,\r\n          with: \"80px\",\r\n          selector: (row) => row.nurse_short_id,\r\n        },\r\n        {\r\n          name: \"Emp Name\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.nurse_name,\r\n        },\r\n        {\r\n          name: \"Designation\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.designation,\r\n        },\r\n        {\r\n          name: \"Duty Start\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.duty_start,\r\n        },\r\n        {\r\n          name: \"Duty End\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.duty_end,\r\n        },\r\n        {\r\n          name: \"Hour\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.hour,\r\n        },\r\n      ];\r\n\r\n      if (selPatient != 0) {\r\n        for (let i = 0; i < daysInMonth; i++) {\r\n          assignPerDayDatas[i + 1] = 0;\r\n        }\r\n\r\n        basic.nurses.map((nurse, nurseIndex) => {\r\n          nurse.rota.map((rota, rotaIndex) => {\r\n            if (rota.patient_id == selPatient && rota.date.includes(month)) {\r\n              thour += rota.hour;\r\n              let day = rota.date.slice(8) * 1;\r\n              assignPerDayDatas[day]++;\r\n              assignDatas.push({\r\n                date: rota.date,\r\n                day: day,\r\n                nurse_name: nurse.name,\r\n                nurse_short_id: nurse._id.slice(20),\r\n                nurse_id: nurse._id,\r\n                designation: nurse.level == 0 ? \"Registered\" : \"Assistant\",\r\n                duty_start: rota.duty_start,\r\n                duty_end: rota.duty_end,\r\n                hour: rota.hour,\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        for (let i = 0; i < daysInMonth; i++) {\r\n          if (assignPerDayDatas[(i + 1) * 1] == 0) {\r\n            assignPerDayDatas[(i + 1) * 1] = 1;\r\n            newAssign.date =\r\n              month + \"-\" + (i < 9 ? +\"0\" + String(i + 1) : i + 1);\r\n            newAssign.day = (i + 1) * 1;\r\n            newAssign.nurse_name = \"NA\";\r\n            newAssign.nurse_short_id = \"NA\";\r\n            newAssign.nurse_id = \"NA\";\r\n            newAssign.designation = \"NA\";\r\n            newAssign.duty_start = \"NA\";\r\n            newAssign.duty_end = \"NA\";\r\n            newAssign.hour = \"NA\";\r\n\r\n            assignDatas = [...assignDatas, { ...newAssign }];\r\n          }\r\n        }\r\n\r\n        assignDatas.sort((a, b) =>\r\n          a.date > b.date\r\n            ? 1\r\n            : b.date > a.date\r\n            ? -1\r\n            : a.duty_start > b.duty_start\r\n            ? 1\r\n            : b.duty_start > a.duty_start\r\n            ? -1\r\n            : 0\r\n        );\r\n\r\n        let total = 0;\r\n        for (var i in assignPerDayDatas) {\r\n          for (var j = 1; j <= assignPerDayDatas[i]; j++) {\r\n            assignDatas[total].rotation = j;\r\n            total++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let patientList = [];\r\n    let patientAutoList = [];\r\n\r\n    basic.patients.map((patient) => {\r\n      patientList[patient._id] = patient.name;\r\n      if (patient.name.includes(selPatientValue)) {\r\n        patientAutoList.push({\r\n          label: patient.name,\r\n          key: patient._id,\r\n        });\r\n      }\r\n    });\r\n    let total = {\r\n      date: \"Total\",\r\n      hour: thour,\r\n    };\r\n    for (let month in monthNames) {\r\n      total[month] = this.getTotals(assignDatas, month);\r\n    }\r\n    total[\"total\"] = this.getTotals(assignDatas, \"total\");\r\n    assignDatas.push(total);\r\n\r\n    const conditionalRowStyles = [\r\n      {\r\n        when: (row) => row.rotation == 1,\r\n        style: (row) => ({\r\n          backgroundColor:\r\n            row.day % 2 == 1 ? \"rgb(160,160,160)\" : \"rgb(192,192,192)\",\r\n        }),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <div className=\"pt-5 text-center text-dark\">\r\n          <h1 className=\"mt-3\">DUTY ROASTER</h1>\r\n        </div>\r\n        <MDBRow className=\" align-items-center justify-content-center\">\r\n          <MDBCol md=\"4\" className=\"pt-4\"></MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\" align-items-center justify-content-center\">\r\n          <MDBCol className=\"autocomplete col-md-3 ncard\">\r\n            <Autocomplete\r\n              getItemValue={(item) => item.label}\r\n              items={patientAutoList}\r\n              inputProps={{ placeholder: \"Select Patients\" }}\r\n              renderItem={(item, isHighlighted) => (\r\n                <div\r\n                  style={{\r\n                    background: isHighlighted ? \"#2E86C1\" : \"white\",\r\n                    color: isHighlighted ? \"white\" : \"black\",\r\n                    borderRadius: \"1px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"15px\",\r\n                    fontFamily: \"Arial\",\r\n                  }}\r\n                >\r\n                  {item.label}\r\n                </div>\r\n              )}\r\n              value={selPatientValue}\r\n              onChange={(e) => this.onChangePatient(e)}\r\n              onSelect={(val, item) => this.onSelectPatient(val, item)}\r\n            />\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={selYear}\r\n                placeholder=\"Year\"\r\n                min={2022}\r\n                max={new Date().getFullYear()}\r\n                onChange={(e) => this.onChangeYear(e)}\r\n              />\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Select\r\n              aria-label=\"select\"\r\n              value={selMonth}\r\n              onChange={(e) => this.onChangeMonth(e)}\r\n            >\r\n              {MonthSelect}\r\n            </Form.Select>\r\n          </MDBCol>\r\n          {user.hasOwnProperty(\"role\") && user.role !== 1 &&\r\n          <MDBCol md=\"2\">\r\n            <MDBBtn\r\n              outline\r\n              rounded\r\n              color=\"success\"\r\n              type=\"button\"\r\n              onClick={() => this.save()}\r\n            >\r\n              {isEditable ? \"save\" : \"edit\"}\r\n            </MDBBtn>\r\n          </MDBCol>\r\n          }\r\n        </MDBRow>\r\n        <MDBRow className=\"p-2\">\r\n          <DataTable\r\n            columns={assignColumns}\r\n            data={assignDatas}\r\n            fixedHeader\r\n            fixedHeaderScrollHeight={\"70vh\"}\r\n            conditionalRowStyles={conditionalRowStyles}\r\n          />\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getRoaster: (data) => dispatch(nAllUpd(data)),\r\n});\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic: BasicData.BasicData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Roaster);\r\n","module.exports=function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=n(2);e.default=r.a},function(t,e,n){\"use strict\";function r(){return r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},r.apply(this,arguments)}function o(t,e){if(null==t)return{};var n,r,o=a(t,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}function a(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}function u(t){function e(t){var e=Object(v.timeFromInt)(t,!1);if(24===l)return e;var n=e.match(/^(\\d+):/),r=parseInt(n[1],10);if(0===r)return\"\".concat(e.replace(/^\\d+/,\"12\"),\" AM\");if(r<12)return\"\".concat(e,\" AM\");if(12===r)return\"\".concat(e,\" PM\");var o=r<22?\"0\".concat(r-12):(r-12).toString();return\"\".concat(e.replace(/^\\d+/,o),\" PM\")}function n(){for(var t=[],e=Object(v.timeToInt)(u,!1),n=Object(v.timeToInt)(y,!1);n<=e;n+=60*g)t.push(n);return t}var a=t.end,u=void 0===a?\"23:59\":a,i=t.format,l=void 0===i?12:i,f=t.initialValue,p=void 0===f?\"00:00\":f,m=t.onChange,d=void 0===m?function(){}:m,b=t.start,y=void 0===b?\"00:00\":b,O=t.step,g=void 0===O?30:O,h=t.value,j=void 0===h?null:h,x=o(t,[\"end\",\"format\",\"initialValue\",\"onChange\",\"start\",\"step\",\"value\"]),I=function(){return n().map(function(t){return{key:t,val:e(t)}})}(),P=I.map(function(t){var e=t.key,n=t.val;return c.a.createElement(\"option\",{key:e,value:e},n)}),M=j||p;try{M=Object(v.timeToInt)(M)}catch(t){M=parseInt(M,10)}return I.filter(function(t){var e=t.key;return M===e}).length||(M=Object(v.timeToInt)(y)),c.a.createElement(s.a,r({as:\"select\",onChange:function(t){d(parseInt(t.target.value,10))},value:M},x),P)}var i=n(3),c=n.n(i),l=n(4),f=n.n(l),p=n(5),s=n.n(p),v=n(6),m=(n.n(v),{end:f.a.string,format:f.a.number,initialValue:f.a.any,onChange:f.a.func,start:f.a.string,step:f.a.number,value:f.a.any});u.propTypes=m,e.a=u},function(t,e){t.exports=require(\"react\")},function(t,e){t.exports=require(\"prop-types\")},function(t,e){t.exports=require(\"react-bootstrap/FormControl\")},function(t,e){t.exports=require(\"time-number\")}]);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _client = require('react-dom/client');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n\n      e.stopPropagation();\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm(_this.props);\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboard = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape,\n          onkeyPress = _this$props2.onkeyPress,\n          keyCodeForClose = _this$props2.keyCodeForClose;\n\n      var keyCode = event.keyCode;\n      var isKeyCodeEscape = keyCode === 27;\n\n      if (keyCodeForClose.includes(keyCode)) {\n        _this.close();\n      }\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n\n      if (onkeyPress) {\n        onkeyPress();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboard, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboard, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  _extends({\n                    key: i,\n                    className: button.className\n                  }, button, {\n                    onClick: function onClick(e) {\n                      return _this2.handleClickButton(button);\n                    }\n                  }),\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  keyCodeForClose: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  onkeyPress: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  keyCodeForClose: [],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nvar root = null;\nvar targetId = 'react-confirm-alert';\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById(properties.targetId || targetId);\n\n  if (properties.targetId && !divTarget) {\n    console.error('React Confirm Alert:', 'Can not get element id (#' + properties.targetId + ')');\n  }\n\n  if (divTarget) {\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  } else {\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = targetId;\n    document.body.appendChild(divTarget);\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  }\n}\n\nfunction removeElementReconfirm(properties) {\n  var target = document.getElementById(properties.targetId || targetId);\n  if (target) {\n    root.unmount(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}","module.exports=function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p=\"\",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r){\"use strict\";function t(e){return\"time-number\"===e.message.substring(0,11)}function n(e){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,t=e.toString(),n=r-t.length,o=\"\";o.length<n;)o+=\"0\";return\"\"+o+t}function o(e,r){var t=r.validate,o=r.format,a=r.leadingZero,i=parseInt(e,10);if(t&&(i<0||i>=86400))throw new RangeError(\"time-number, timeFromInt(): rangeError, value supposed to be between 0 and 86399\");var u=Math.floor(i/3600),m=Math.floor((i-3600*u)/60),d=i-3600*u-60*m,s=null;12!==o&&\"12\"!==o||(s=u<12?\"AM\":\"PM\",0===u?u=12:u>12&&(u-=12));var f=[a?n(u):u,n(m)];d&&f.push(n(d));var l=f.join(\":\");return s?l+\" \"+s:l}function a(e){return\"boolean\"==typeof e?{validate:e}:e}function i(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={validate:!0,format:24,leadingZero:!0},i=Object.assign({},n,a(r)),u=i.validate;if(!u)return o(e,i);try{if(e-parseFloat(e,10)+1>=0)return o(e,i);throw new Error}catch(r){if(t(r))throw r;throw new Error(\"time-number, timeFromInt(): invalud value: '\"+e+\"', supposed to be number\")}}function u(e,r){for(var t=r.validate,n=e.split(\":\"),o=n.length;n.length<3;)n.push(\"0\");var a=n.map(function(e){return parseInt(e,10)});if(t){var i=a[0];if(i<0||i>23)throw new RangeError(\"time-number, timeToInt(): hours must be between 0 and 23, provided value: '\"+e+\"'\");if(o>1){var u=a[1];if(u<0||u>59)throw new RangeError(\"time-number, timeToInt(): minutes must be between 0 and 59, provided value: '\"+e+\"'\")}if(o>2){var m=a[2];if(m<0||m>59)throw new RangeError(\"time-number, timeToInt(): seconds must be between 0 and 59, provided value: '\"+e+\"'\")}}return 3600*a[0]+60*a[1]+a[2]}function m(e){if(!e||!e.match)return e;if(!e.match(/(am|pm)$/i))return e;if(e.match(/^0+:/))throw new Error(\"12h format can't have 00:30 AM, it should be 12:30 AM instead\");return e.match(/am$/i)?e.replace(/^(\\d+)/,function(e){return\"12\"===e?\"0\":e}).replace(/\\s*am$/i,\"\"):e.replace(/^(\\d+)/,function(e){return\"12\"===e?e:(parseInt(e,10)+12).toString()}).replace(/\\s*pm$/i,\"\")}function d(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={validate:!0},o=Object.assign({},n,a(r)),i=o.validate;if(!i){var d=m(e);return u(d,o)}try{var s=m(e);if(!s.match(/^\\d+(:\\d+(:\\d+)?)?$/))throw new Error;return u(s,o)}catch(r){if(t(r))throw r;throw new Error(\"time-number, timeToInt(): supported formats are 'HH', 'HH:mm', 'HH:mm:ss', provided value: '\"+e+\"' doesn't match any of them\")}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.timeFromInt=i,r.timeToInt=d}]);"],"names":["Roaster","props","viewPerPatient","e","setState","state","perPatient","save","basic","isEditable","selPatient","selYear","selMonth","selPatientValue","assigns","requestblocks","console","log","length","toastr","setTimeout","axios","patient_id","year","month","assignData","then","response","data","catch","error","assignPerDay","newAssign","daysInMonth","Date","getDate","i","nurses","map","nurse","nurseIndex","rota","rotaIndex","date","includes","day","slice","push","nurse_name","name","nurse_short_id","_id","nurse_id","designation","level","duty_start","duty_end","hour","String","sort","a","b","total","j","rotation","multiAssign","row","selMultiDay","n","splice","multiRemove","onChangePatient","target","value","onSelectPatient","val","item","key","onChangeYear","onChangeMonth","onChangeMultiDay","onChangeNurse","assign","assignIndex","index","onChangeDutyStart","_end","_hour","rotas","_self","parseInt","min","_start","isduplicate","assignCount","isAssign","Promise","resolve","patients","patient","confirmAlert","title","message","buttons","label","onClick","onChangeDutyEnd","Math","abs","split","getMonth","getFullYear","forEach","json","ret","assignHour","this","user","assignColumns","assignDatas","assignPerDayDatas","monthNames","Mon","swap","Object","keys","NoMon","values","MonthSelect","thour","holidays","holidaysPerMonth","holiday","sundaysPerMonth","firstDate","getDay","selDay","center","wrap","selector","with","width","cell","Form","_nurse_id","onChange","leaves","leave","leavedaysPerMonth","from","to","betweenDay","setDate","workingdays","Set","_nurse","className","selected","step","disabled","start","outline","floating","color","size","leave_id","patientList","patientAutoList","getTotals","md","getItemValue","items","inputProps","placeholder","renderItem","isHighlighted","style","background","borderRadius","backgroundColor","fontSize","fontFamily","onSelect","type","max","hasOwnProperty","role","rounded","columns","fixedHeader","fixedHeaderScrollHeight","conditionalRowStyles","when","Component","connect","BasicData","dispatch","getRoaster","nAllUpd","module","exports","t","r","o","l","call","m","c","d","defineProperty","configurable","enumerable","get","__esModule","default","prototype","p","s","arguments","apply","indexOf","getOwnPropertySymbols","u","propertyIsEnumerable","v","timeFromInt","match","concat","replace","toString","end","format","f","initialValue","y","O","g","h","x","I","timeToInt","P","createElement","M","filter","as","string","number","any","func","propTypes","require","_class","_temp2","_extends","source","_createClass","defineProperties","descriptor","writable","Constructor","protoProps","staticProps","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","targetId","children","id","root","_client","createRoot","render","_react2","ReactConfirmAlert","createElementReconfirm","_react","_interopRequireDefault","_propTypes2","obj","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_Component","_ref","_temp","_this","_len","args","Array","_key","__proto__","getPrototypeOf","handleClickButton","button","close","handleClickOverlay","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","stopPropagation","afterClose","removeBodyClass","removeElementReconfirm","removeSVGBlurReconfirm","keyboard","event","_this$props2","closeOnEscape","onKeypressEscape","onkeyPress","keyCodeForClose","keyCode","isKeyCodeEscape","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","customUI","onClose","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","ref","dom","array","isRequired","bool","arrayOf","defaultProps","svg","parentNode","removeChild","remove","unmount","loaded","substring","validate","leadingZero","RangeError","floor","join","Error","parseFloat"],"sourceRoot":""}
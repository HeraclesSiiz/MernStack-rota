{"version":3,"file":"static/js/841.74ecfa89.chunk.js","mappings":"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","sources":["pages/working.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DataTable from 'react-data-table-component';\r\nimport {\r\n  MDBCol,MDBContainer,MDBRow\r\n} from 'mdb-react-ui-kit';\r\nimport {IoMdDownload} from 'react-icons/io'\r\nimport { CSVLink } from \"react-csv\";\r\nimport {Form} from 'react-bootstrap';\r\n\r\nclass WorkingDays extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      let date = new Date();\r\n      let year = date.getFullYear();\r\n      \r\n      this.state = {\r\n        selYear:year\r\n      };\r\n  }\r\n  onChangeYear = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selYear:e.target.value,\r\n    });\r\n  }\r\n  swap(json){\r\n    let ret = [];\r\n    for(var key in json){\r\n      ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      selYear\r\n    } = this.state;\r\n    const {basic} =this.props;\r\n \r\n    const workingColumns = [\r\n     \r\n      {\r\n        name: \"Month\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.month,\r\n      },\r\n      {\r\n        name: \"Days\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.days,\r\n      },\r\n      {\r\n        name: \"Sundays\",\r\n        center:true,\r\n        selector: (row) => row.sundays,\r\n      },\r\n      {\r\n        name: \"Holidays\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.holidays,\r\n      },\r\n      {\r\n        name: \"Net Working Days\",\r\n        center:true,\r\n        selector: (row) => row.workingdays,\r\n      },\r\n      {\r\n        name: \"daily Hours\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.hours,\r\n      },\r\n      {\r\n        name: \"Total Hours available\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.totalhours,\r\n      }\r\n    ];\r\n\r\n    let monthNames = basic.monthNames;\r\n    let monthNumbers = this.swap(monthNames);\r\n\r\n    let workingDatas = [];\r\n\r\n    let holidays = basic.holidays;\r\n    let headers = [\r\n      { label: \"Month\", key: \"month\" },\r\n      { label: \"Days\", key: \"days\" },\r\n      { label: \"Sundays\", key: \"sundays\" },\r\n      { label: \"Holidays\", key: \"holidyas\" },\r\n      { label: \"Net Working Days\", key: \"workingdays\" },\r\n      { label: \"daily Hours\", key: \"hours\" },\r\n      { label: \"Total Hours available\", key: \"totalhours\" }\r\n    ];\r\n    \r\n    let holidaysPerMonth = [];\r\n    let sundaysPerMonth = [];\r\n    //get holidays per month\r\n    holidays.map(holiday =>{\r\n      let key = monthNumbers[holiday.slice(0,2)];\r\n      if(holidaysPerMonth[key] == undefined){holidaysPerMonth[key] = [];}\r\n      holidaysPerMonth[key].push(selYear+'-'+holiday);\r\n    });\r\n    //get sundays per month\r\n    for(let selMonth in monthNumbers){\r\n      let daysInMonth = new Date(selYear, selMonth, 0).getDate();\r\n      let date = selYear+'-'+selMonth+'-01';\r\n      let firstDate = new Date(date).getDay();\r\n      if(firstDate == 0){firstDate = 1}else{firstDate = 7-firstDate+1}\r\n      for(let selDay = firstDate;selDay < daysInMonth;selDay+=7){\r\n        let day = selDay > 9?selDay:'0'+selDay;\r\n        \r\n        let key = monthNumbers[selMonth];\r\n        if(sundaysPerMonth[key] == undefined){sundaysPerMonth[key] = [];}\r\n        sundaysPerMonth[key].push(selYear+'-'+selMonth+'-'+day);\r\n      }\r\n    }\r\n    //datatable set\r\n    for(let selMonth in monthNames){\r\n      let daysInMonth = new Date(selYear, monthNames[selMonth], 0).getDate();\r\n      if(holidaysPerMonth[selMonth] == undefined){holidaysPerMonth[selMonth] = [];}\r\n      if(sundaysPerMonth[selMonth] == undefined){sundaysPerMonth[selMonth] = [];}\r\n\r\n      let offDays = [\r\n        ...holidaysPerMonth[selMonth],\r\n        ...sundaysPerMonth[selMonth]];\r\n      offDays = [...new Set(offDays)];\r\n      let row={\r\n        month:selMonth,\r\n        days:daysInMonth,\r\n        sundays:sundaysPerMonth[selMonth].length,\r\n        holidays:holidaysPerMonth[selMonth].length,\r\n        workingdays:daysInMonth - offDays.length,\r\n        hours:8,\r\n        totalhours:8*(daysInMonth - offDays.length)\r\n      };\r\n\r\n      workingDatas.push(row);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n          <div className=\"pt-5 text-center text-dark\">\r\n            <h1 className=\"mt-3\">WORKING DAYS</h1>\r\n          </div>\r\n          <MDBRow className=\" align-items-center justify-content-center\">\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                <Form.Control type=\"number\" value={selYear} placeholder=\"Year\"  onChange = {(e) =>this.onChangeYear(e)}/>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\" >\r\n              <CSVLink\r\n                headers={headers}\r\n                data={workingDatas}\r\n                filename={\"working.csv\"}\r\n                className=\"btn btn-success \"\r\n                target=\"_blank\"\r\n                >             \r\n                <IoMdDownload />Export \r\n              </CSVLink>\r\n           </MDBCol>   \r\n          </MDBRow>\r\n        \r\n          <MDBRow className='mt-2 workingTable'>   \r\n            <DataTable\r\n                columns={workingColumns} \r\n                data={workingDatas}\r\n                fixedHeader\r\n                fixedHeaderScrollHeight={'120vh'}\r\n                striped\r\n            />\r\n          </MDBRow>\r\n      </MDBContainer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic:BasicData.BasicData\r\n});\r\nexport default connect(mapStateToProps,null)(WorkingDays)"],"names":["WorkingDays","props","onChangeYear","e","setState","state","selYear","target","value","year","Date","getFullYear","json","ret","key","this","basic","monthNames","monthNumbers","swap","workingDatas","holidays","holidaysPerMonth","sundaysPerMonth","selMonth","map","holiday","slice","undefined","push","daysInMonth","getDate","firstDate","getDay","selDay","day","offDays","Set","row","month","days","sundays","length","workingdays","hours","totalhours","className","md","type","placeholder","onChange","CSVLink","headers","label","data","filename","columns","name","center","wrap","width","selector","fixedHeader","fixedHeaderScrollHeight","striped","Component","connect","BasicData"],"sourceRoot":""}
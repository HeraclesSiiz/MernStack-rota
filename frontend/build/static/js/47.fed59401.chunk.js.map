{"version":3,"file":"static/js/47.fed59401.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["usePrevious","value","ref","useRef","useEffect","current","dataAttr","property","dataProp","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","manager","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","_excluded","useModalManager","provided","useWindow","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","useState","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","hasClass","baseVal","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","propTypes","PropTypes","variant","CloseButton","type","defaultProps","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","_superPropBase","object","hasOwnProperty","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}
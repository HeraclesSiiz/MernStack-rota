{"version":3,"file":"static/js/319.038350c9.chunk.js","mappings":"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","sources":["pages/dtr.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nimport { MDBContainer } from 'mdb-react-ui-kit';\r\nimport {IoMdDownload} from 'react-icons/io'\r\nimport { CSVLink } from \"react-csv\";\r\nimport {connect} from 'react-redux'\r\nimport DataTable from 'react-data-table-component';\r\n\r\nclass DTR extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      let date = new Date();\r\n      let year = date.getFullYear();\r\n      let month = date.getMonth()+1 > 9 ? date.getMonth()+1 : '0'+(date.getMonth()+1);\r\n      let day = new Date(year,month,0).getDate();\r\n      \r\n      this.state = {\r\n        type:0,\r\n        from:year+'-'+month+'-'+'01',\r\n        to:year+'-'+month+'-'+day,\r\n        selNurse:0\r\n      };\r\n  }\r\n  setDate = (target,e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      [target]:e.target.value\r\n    });\r\n  }\r\n  onChangeNurse = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse:e.target.value\r\n    });\r\n  }\r\n  componentDidMount() {\r\n  }\r\n  \r\n  render() {\r\n    const {basic} = this.props;\r\n    const {from,to,selNurse} = this.state;\r\n\r\n    let totalColumns = [];\r\n    let totalDatas = [];\r\n\r\n    totalColumns.push({\r\n        name: \"Date\",\r\n        center:true,\r\n        wrap:true,\r\n        sortable:true,\r\n        selector: (row) => row.date,\r\n      }\r\n      ,{\r\n        name: \"Patient\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'20vw%',\r\n        sortable:true,\r\n        selector: (row) => row.patient,\r\n      }\r\n      ,{\r\n        name: \"Duty Start\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'20vw',\r\n        sortable:true,\r\n        selector: (row) => row.duty_start,\r\n      }\r\n      ,{\r\n        name: \"Duty End\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'20vw',\r\n        sortable:true,\r\n        selector: (row) => row.duty_end,\r\n      }\r\n      ,{\r\n        name: \"Hour\",\r\n        center:true,\r\n        wrap:true,\r\n        sortable:true,\r\n        selector: (row) => row.hour,\r\n    });\r\n\r\n    //show data per individual\r\n    let dates = [];\r\n    for (var d = new Date(from); d <= new Date(to); d.setDate(d.getDate() + 1)) {\r\n        let year = d.getFullYear();\r\n        let month = d.getMonth()+1 > 9 ? d.getMonth()+1 : '0'+(d.getMonth()+1);\r\n        let day = d.getDate() > 9 ? d.getDate() : '0'+d.getDate();\r\n        let dateFormat = year+'-'+month+'-'+day;\r\n        dates.push(dateFormat);\r\n      }\r\n    \r\n    let patientList = [];\r\n    basic.patients.map((patient) =>{\r\n      patientList[patient._id] = patient.name;\r\n    });\r\n\r\n    let leavedays = [];\r\n    let thour = 0;\r\n    let headers = [\r\n      { label: \"Date\", key: \"date\" },\r\n      { label: \"Patient\", key: \"patient\" },\r\n      { label: \"Duty Start\", key: \"duty_start\" },\r\n      { label: \"Duty End\", key: \"duty_end\" },\r\n      { label: \"Hour\", key: \"hour\" }\r\n    ];\r\n\r\n    basic.nurses.map((nurse) =>{\r\n      if(nurse._id == selNurse){\r\n        let leaves = nurse.leave?nurse.leave:[];\r\n\r\n        for(let leave of leaves){\r\n          let leavefrom = new Date(leave.from);\r\n          let leaveto = new Date(leave.to);\r\n          for(let betweenDay = leavefrom;betweenDay <= leaveto;){\r\n            let between = betweenDay.toISOString().slice(0,10);\r\n            if(between >= from && between <= to){\r\n              leavedays.push(between);\r\n            }\r\n            betweenDay.setDate(betweenDay.getDate() + 1);\r\n          }\r\n        }\r\n\r\n        nurse.rota.map((rota)=>{\r\n          if(rota.date >= from && rota.date <= to){\r\n            thour += rota.hour;\r\n            let row = {\r\n              date:rota.date,\r\n              patient:patientList[rota.patient_id],\r\n              duty_start:rota.duty_start,\r\n              duty_end:rota.duty_end,\r\n              hour:rota.hour,\r\n            }\r\n            totalDatas.push(row);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if(selNurse != 0){\r\n      \r\n      let total = {\r\n        date:'Total',\r\n        hour:thour\r\n      }\r\n      totalDatas.push(total);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <div className=\"pt-5 text-center text-dark\">\r\n          <h1 className=\"mt-3\">DAILY TIME RECORD (DTR)</h1>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n              <div className=\"row lex align-items-center justify-content-center\">\r\n                <div className='col-md-3'>\r\n                  <Form.Group>\r\n                    <Form.Select aria-label=\"patient select\" value={selNurse} onChange = {(e) =>this.onChangeNurse(e)}>\r\n                      <option value=\"0\" >Select Nurse</option>\r\n                      {\r\n                        basic.nurses.map((value,index) =>{\r\n                          return <option key = {index} value={value._id}>{value.name}</option>\r\n                        })\r\n                      }\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='col-md-3'>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"date\" value={from} max={to}  onChange = {(e) =>this.setDate('from',e)} />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='col-md-3'>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"date\" value={to} min={from}  onChange = {(e) =>this.setDate('to',e)}/>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='col-md-3'>\r\n              <CSVLink\r\n                headers={headers}\r\n                data={totalDatas}\r\n                filename={\"dtr.csv\"}\r\n                className=\"btn btn-success \"\r\n                target=\"_blank\"\r\n                >\r\n                <IoMdDownload />Export \r\n              </CSVLink>\r\n           </div>\r\n           </div>\r\n            <div className='p-2'>\r\n              <DataTable \r\n                columns={totalColumns} \r\n                data={totalDatas}\r\n                striped\r\n                fixedHeader\r\n                fixedHeaderScrollHeight={'60vh'}\r\n                />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic:BasicData.BasicData\r\n});\r\nexport default connect(mapStateToProps,null)(DTR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["DTR","props","setDate","target","e","setState","state","value","onChangeNurse","selNurse","date","Date","year","getFullYear","month","getMonth","day","getDate","type","from","to","basic","this","totalColumns","totalDatas","push","name","center","wrap","sortable","selector","row","width","patient","duty_start","duty_end","hour","dates","d","dateFormat","patientList","patients","map","_id","leavedays","thour","nurses","nurse","leaves","leave","leavefrom","leaveto","betweenDay","between","toISOString","slice","rota","patient_id","total","className","onChange","index","max","min","CSVLink","headers","label","key","data","filename","columns","striped","fixedHeader","fixedHeaderScrollHeight","Component","connect","BasicData","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}
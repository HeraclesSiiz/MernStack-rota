{"version":3,"file":"static/js/453.d9f86104.chunk.js","mappings":"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","sources":["pages/leave.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/App.css\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport {\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBBtn,\r\n  MDBBtnGroup,\r\n} from \"mdb-react-ui-kit\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { IoMdDownload } from \"react-icons/io\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport Autocomplete from \"react-autocomplete\";\r\nimport { nAllUpd } from \"../store/Actions/BasicAction\";\r\n\r\nclass LeaveDays extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month =\r\n      date.getMonth() + 1 > 9\r\n        ? date.getMonth() + 1\r\n        : \"0\" + (date.getMonth() + 1);\r\n    let day = date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate();\r\n    this.state = {\r\n      selView: 1,\r\n      selYear: year,\r\n      selMonth: month,\r\n\r\n      from: year + \"-\" + month + \"-\" + day,\r\n      to: year + \"-\" + month + \"-\" + day,\r\n      selFilter: \"\",\r\n      selNurse: 0,\r\n      selNurseValue: \"\",\r\n      selType: 0,\r\n      isOpen: false,\r\n      modal: {\r\n        nurse_id: \"\",\r\n        leave_id: \"\",\r\n        type: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  setDate = (target, e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [target]: e.target.value,\r\n    });\r\n  };\r\n  setModalDate = (target, e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      modal: {\r\n        ...this.state.modal,\r\n        [target]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  filterChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selFilter: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeNurse = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse: 0,\r\n      selNurseValue: e.target.value,\r\n    });\r\n  };\r\n  OnSelectNurse = (val, item) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse: item.key,\r\n      selNurseValue: val,\r\n    });\r\n  };\r\n  onChangeType = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selType: e.target.value,\r\n    });\r\n  };\r\n  onChangeView = (target, e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [target]: e.target.value,\r\n    });\r\n  };\r\n\r\n  addLeave = () => {\r\n    const { selNurse, selType, from, to } = this.state;\r\n    if (selNurse == 0) {\r\n      toastr.info(\"Please select nurse!\");\r\n    } else {\r\n      this.setState({\r\n        selNurse: 0,\r\n      });\r\n\r\n      const { requestblocks } = this.props.basic;\r\n      if(requestblocks.includes(selNurse) || requestblocks.includes(\"roaster\")){\r\n        toastr.clear();\r\n        setTimeout(() => toastr.warning(\"This item cannot be requested! Please wait until approver approve the transfer request.\"), 300);\r\n        return;\r\n      }\r\n\r\n      axios\r\n        .post(\"leave/add\", {\r\n          nurse_id: selNurse,\r\n          type: selType,\r\n          from: from,\r\n          to: to,\r\n        })\r\n        .then(function (response) {\r\n          const res = response.data;\r\n          if(res.state == \"error\"){\r\n            toastr.clear();\r\n            setTimeout(() => toastr.info(\"holiday setting error!\"), 3000);\r\n          }\r\n        })\r\n        .catch(function (error) {});\r\n    }\r\n  };\r\n\r\n  leaveModal = (isOpen, row) => {\r\n    if (isOpen) {\r\n      this.setState({\r\n        ...this.state,\r\n        isOpen: isOpen,\r\n        modal: {\r\n          nurse_id: row.nurse_id,\r\n          leave_id: row.leave_id,\r\n          type: row.type,\r\n          from: row.leave_start,\r\n          to: row.leave_end,\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        isOpen: isOpen,\r\n      });\r\n    }\r\n  };\r\n\r\n  editConfirmLeave = () => {\r\n    this.setState({\r\n      isOpen: false,\r\n    });\r\n\r\n    const { requestblocks } = this.props.basic;\r\n    if(requestblocks.includes(this.state.modal.nurse_id) || requestblocks.includes(\"roaster\")){\r\n      toastr.clear();\r\n      setTimeout(() => toastr.warning(\"This item cannot be requested! Please wait until approver approve the transfer request.\"), 300);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"leave/edit\", {\r\n        ...this.state.modal,\r\n      })\r\n      .then(function (response) {\r\n        const res = response.data;\r\n        if(res.state == \"error\"){\r\n          toastr.clear();\r\n          setTimeout(() => toastr.info(\"holiday setting error!\"), 3000);\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  };\r\n\r\n  removeLeave = (row) => {\r\n    const { requestblocks } = this.props.basic;\r\n    if(requestblocks.includes(row.nurse_id) || requestblocks.includes(\"roaster\")){\r\n      toastr.clear();\r\n      setTimeout(() => toastr.warning(\"This item cannot be requested! Please wait until approver approve the transfer request.\"), 300);\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"leave/remove\", {\r\n        nurse_id: row.nurse_id,\r\n        leave_id: row.leave_id,\r\n      })\r\n      .then(function (response) {\r\n        const res = response.data;\r\n        if(res.state == \"error\"){\r\n          toastr.clear();\r\n          setTimeout(() => toastr.info(\"holiday setting error!\"), 3000);\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  };\r\n\r\n  getLeaveType(row) {\r\n    if (row.type == 1) {\r\n      row.leave_type = \"Annual Leave\";\r\n    } else if (row.type == 2) {\r\n      row.leave_type = \"Sick Leave\";\r\n    } else if (row.type == 3) {\r\n      row.leave_type = \"Maternity leave\";\r\n    } else if (row.type == 4) {\r\n      row.leave_type = \"Other Leave\";\r\n    }\r\n    return row.leave_type;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      from,\r\n      to,\r\n      selNurse,\r\n      selNurseValue,\r\n      selType,\r\n      modal,\r\n      isOpen,\r\n      selView,\r\n      selYear,\r\n      selMonth,\r\n      selFilter,\r\n    } = this.state;\r\n    const { basic } = this.props;\r\n    const { user } = this.props.basic;\r\n    let leaveColumns = [];\r\n    leaveColumns.push(\r\n      {\r\n        name: \"No\",\r\n        center: true,\r\n        wrap: true,\r\n        selector: (row) => row.no,\r\n      },\r\n      {\r\n        name: \"Image\",\r\n        center: true,\r\n        wrap: true,\r\n        width: \"70px\",\r\n        cell: (row) => (\r\n          <img src={row.image} style={{ width: \"65px\", height: \"50px\" }} />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Staff ID\",\r\n        center: true,\r\n        wrap: true,\r\n        selector: (row) => row.nurse_short_id,\r\n      },\r\n      {\r\n        name: \"Staff Name\",\r\n        center: true,\r\n        selector: (row) => row.name,\r\n      }\r\n    );\r\n    if (selView == 1) {\r\n      leaveColumns.push(\r\n        {\r\n          name: \"Leave Type\",\r\n          center: true,\r\n          selector: (row) => row.leave_type,\r\n        },\r\n        {\r\n          name: \"Leave Start\",\r\n          center: true,\r\n          wrap: true,\r\n          selector: (row) => row.leave_start,\r\n        },\r\n        {\r\n          name: \"Leave End\",\r\n          center: true,\r\n          selector: (row) => row.leave_end,\r\n        }\r\n      );\r\n    } else {\r\n      leaveColumns.push({\r\n        name: \"Leave Periods\",\r\n        center: true,\r\n        wrap: true,\r\n        width: \"300px\",\r\n        selector: (row) => row.leave_periods,\r\n      });\r\n    }\r\n    leaveColumns.push(\r\n      {\r\n        name: \"Leave Days\",\r\n        center: true,\r\n        wrap: true,\r\n        selector: (row) => row.leave_days,\r\n      },\r\n      {\r\n        name: \"Daily Hours\",\r\n        center: true,\r\n        wrap: true,\r\n        selector: (row) => row.daily_hours,\r\n      },\r\n      {\r\n        name: \"Leave Hours\",\r\n        center: true,\r\n        wrap: true,\r\n        selector: (row) => row.leave_hours,\r\n      }\r\n    );\r\n    if (selView == 1 && user.hasOwnProperty(\"role\") && user.role !== 1) {\r\n      leaveColumns.push({\r\n        name: \"Action\",\r\n        center: true,\r\n        wrap: true,\r\n        cell: (row) => [\r\n          <MDBBtnGroup key={row.leave_id}>\r\n            <MDBBtn\r\n              outline\r\n              color=\"success\"\r\n              size=\"sm\"\r\n              className=\"my-1 ms-1\"\r\n              onClick={() => this.leaveModal(true, row)}\r\n            >\r\n              <FaEdit />\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              outline\r\n              color=\"success\"\r\n              size=\"sm\"\r\n              className=\"my-1 me-1\"\r\n              onClick={() => this.removeLeave(row)}\r\n            >\r\n              <FaTrash />\r\n            </MDBBtn>\r\n          </MDBBtnGroup>,\r\n        ],\r\n      });\r\n    }\r\n\r\n    let nurseList = [];\r\n    let nurseAutoList = [];\r\n\r\n    basic.nurses.map((nurse) => {\r\n      nurseList[nurse._id] = nurse.name;\r\n      if (nurse.name.includes(selNurseValue)) {\r\n        nurseAutoList.push({\r\n          label: nurse.name,\r\n          key: nurse._id,\r\n        });\r\n      }\r\n    });\r\n\r\n    let leaveDatas = [];\r\n    let headers = [\r\n      { label: \"No\", key: \"no\" },\r\n      { label: \"Staff ID\", key: \"nurse_short_id\" },\r\n      { label: \"Staff Name\", key: \"name\" },\r\n      { label: \"Leave Type\", key: \"leave_type\" },\r\n      { label: \"Leave Start\", key: \"leave_start\" },\r\n      { label: \"Leave End\", key: \"leave_end\" },\r\n      { label: \"Leave Days\", key: \"leave_days\" },\r\n      { label: \"Daily Hours\", key: \"daily_hours\" },\r\n      { label: \"Leave Hours\", key: \"leave_hours\" },\r\n    ];\r\n\r\n    let rowCount = 0;\r\n    basic.nurses.map((nurse) => {\r\n      let total_leave_days = 0;\r\n      let leave_periods = [];\r\n      nurse.leave.map((leave) => {\r\n        let month = selYear + \"-\" + selMonth;\r\n        let daysInMonth = new Date(selYear, selMonth, 0).getDate();\r\n        if (leave.from.startsWith(month) || leave.to.startsWith(month)) {\r\n          let from = new Date(leave.from);\r\n          let to = new Date(leave.to);\r\n          let leave_days = Math.ceil((to - from) / (1000 * 60 * 60 * 24)) + 1;\r\n          if (selView == 2) {\r\n            if (!leave.from.startsWith(month)) {\r\n              leave_days = parseInt(leave.to.slice(8, 10));\r\n              leave_periods.push(\"(1~\" + parseInt(leave.to.slice(8)) + \")\");\r\n            } else if (!leave.to.startsWith(month)) {\r\n              leave_days =\r\n                Math.ceil(\r\n                  (new Date(selYear + \"-\" + selMonth + \"-\" + daysInMonth) -\r\n                    from) /\r\n                    (1000 * 60 * 60 * 24)\r\n                ) + 1;\r\n              leave_periods.push(\r\n                \"(\" + parseInt(leave.from.slice(8)) + \"~\" + daysInMonth + \")\"\r\n              );\r\n            } else {\r\n              leave_periods.push(\r\n                \"(\" +\r\n                  parseInt(leave.from.slice(8)) +\r\n                  \"~\" +\r\n                  parseInt(leave.to.slice(8)) +\r\n                  \")\"\r\n              );\r\n            }\r\n            total_leave_days += leave_days;\r\n          }\r\n          if (selView == 1) {\r\n            rowCount++;\r\n            leaveDatas.push({\r\n              no: rowCount,\r\n              image: nurse.image,\r\n              nurse_id: nurse._id,\r\n              nurse_short_id: nurse._id.slice(20),\r\n              name: nurse.name,\r\n              leave_type: this.getLeaveType(leave),\r\n              leave_id: leave.leave_id,\r\n              leave_start: leave.from,\r\n              leave_end: leave.to,\r\n              leave_days: leave_days,\r\n              daily_hours: 8,\r\n              leave_hours: 8 * leave_days,\r\n            });\r\n          }\r\n        }\r\n      });\r\n      if (selView == 2) {\r\n        if (total_leave_days != 0) {\r\n          rowCount++;\r\n          leaveDatas.push({\r\n            no: rowCount,\r\n            image: nurse.image,\r\n            nurse_id: nurse._id,\r\n            nurse_short_id: nurse._id.slice(20),\r\n            name: nurse.name,\r\n            leave_periods: leave_periods.join(\",\"),\r\n            leave_days: total_leave_days,\r\n            daily_hours: 8,\r\n            leave_hours: 8 * total_leave_days,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    let monthNames = basic.monthNames;\r\n    let Mon = Object.keys(monthNames);\r\n    let NoMon = Object.values(monthNames);\r\n\r\n    const MonthSelect = Mon.map((month, index) => (\r\n      <option key={index} value={NoMon[index]}>{month}</option>\r\n    ));\r\n    leaveDatas.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <div className=\"pt-5 text-center text-dark\">\r\n          <h1 className=\"mt-3\">LEAVE DAYS</h1>\r\n        </div>\r\n        {user.hasOwnProperty(\"role\") && user.role !== 1 &&\r\n        <MDBRow className=\" align-items-center justify-content-center \">\r\n          <MDBCol className=\" autocomplete col-md-2 ncard\">\r\n            <Autocomplete\r\n              getItemValue={(item) => item.label}\r\n              items={nurseAutoList}\r\n              inputProps={{\r\n                placeholder: \"Select Nurses\",\r\n              }}\r\n              renderItem={(item, isHighlighted) => (\r\n                <div\r\n                  style={{\r\n                    background: isHighlighted ? \"#2E86C1\" : \"white\",\r\n                    color: isHighlighted ? \"white\" : \"black\",\r\n                    borderRadius: \"1px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"15px\",\r\n                    fontFamily: \"Arial\",\r\n                  }}\r\n                >\r\n                  {item.label}\r\n                </div>\r\n              )}\r\n              value={selNurseValue}\r\n              onChange={(e) => this.onChangeNurse(e)}\r\n              onSelect={(val, item) => this.OnSelectNurse(val, item)}\r\n            />\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Select\r\n                aria-label=\"nurse select\"\r\n                value={selType}\r\n                onChange={(e) => this.onChangeType(e)}\r\n              >\r\n                <option value=\"\">Select Leave</option>\r\n                <option value=\"1\">Annual leave</option>\r\n                <option value=\"2\">sick leave</option>\r\n                <option value=\"3\">Maternity leave</option>\r\n                <option value=\"4\">Other Leave</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"date\"\r\n                value={from}\r\n                max={to}\r\n                onChange={(e) => this.setDate(\"from\", e)}\r\n              />\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"date\"\r\n                value={to}\r\n                min={from}\r\n                onChange={(e) => this.setDate(\"to\", e)}\r\n              />\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <MDBBtn\r\n              outline\r\n              rounded\r\n              color=\"success\"\r\n              onClick={() => this.addLeave()}\r\n            >\r\n              Add Leave\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        }\r\n        <MDBRow className=\"mt-3 align-items-center justify-content-center\">\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Select\r\n                aria-label=\"nurse select\"\r\n                value={selView}\r\n                onChange={(e) => this.onChangeView(\"selView\", e)}\r\n              >\r\n                <option value=\"1\">View Per Record</option>\r\n                <option value=\"2\">View Per Nurse</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={selYear}\r\n                min={2000}\r\n                onChange={(e) => this.onChangeView(\"selYear\", e)}\r\n              />\r\n            </Form.Group>\r\n          </MDBCol>\r\n          <MDBCol md=\"2\">\r\n            <Form.Select\r\n              aria-label=\"select\"\r\n              value={selMonth}\r\n              onChange={(e) => this.onChangeView(\"selMonth\", e)}\r\n            >\r\n              {MonthSelect}\r\n            </Form.Select>\r\n          </MDBCol>\r\n          <MDBCol md=\"3\" className=\"float-right\">\r\n            <CSVLink\r\n              headers={headers}\r\n              data={leaveDatas}\r\n              filename={\"leavedays.csv\"}\r\n              className=\"btn btn-success \"\r\n              target=\"_blank\"\r\n            >\r\n              <IoMdDownload />\r\n              Export\r\n            </CSVLink>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-2\">\r\n          <DataTable\r\n            columns={leaveColumns}\r\n            data={leaveDatas}\r\n            fixedHeader\r\n            fixedHeaderScrollHeight={\"60vh\"}\r\n          />\r\n        </MDBRow>\r\n        <Modal\r\n          show={isOpen}\r\n          size=\"sm\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          onHide={() => this.leaveModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Leave Modify</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={modal.from}\r\n                  max={modal.to}\r\n                  onChange={(e) => this.setModalDate(\"from\", e)}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow className=\"mt-2\">\r\n              <MDBCol>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={modal.to}\r\n                  min={modal.from}\r\n                  onChange={(e) => this.setModalDate(\"to\", e)}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <MDBBtn color=\"secondary\" onClick={() => this.leaveModal(false)}>\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn color=\"success\" onClick={() => this.editConfirmLeave()}>\r\n              Save\r\n            </MDBBtn>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getLeave: (data) => dispatch(nAllUpd(data)),\r\n});\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic: BasicData.BasicData,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaveDays);\r\n"],"names":["LeaveDays","props","setDate","target","e","setState","state","value","setModalDate","modal","filterChange","selFilter","onChangeNurse","selNurse","selNurseValue","OnSelectNurse","val","item","key","onChangeType","selType","onChangeView","addLeave","from","to","toastr","requestblocks","basic","includes","setTimeout","axios","nurse_id","type","then","response","data","catch","error","leaveModal","isOpen","row","leave_id","leave_start","leave_end","editConfirmLeave","removeLeave","date","Date","year","getFullYear","month","getMonth","day","getDate","selView","selYear","selMonth","leave_type","this","user","leaveColumns","push","name","center","wrap","selector","no","width","cell","src","image","style","height","nurse_short_id","leave_periods","leave_days","daily_hours","leave_hours","hasOwnProperty","role","outline","color","size","className","onClick","nurseList","nurseAutoList","nurses","map","nurse","_id","label","leaveDatas","rowCount","total_leave_days","leave","daysInMonth","startsWith","Math","ceil","parseInt","slice","getLeaveType","join","monthNames","Mon","Object","keys","NoMon","values","MonthSelect","index","sort","a","b","getItemValue","items","inputProps","placeholder","renderItem","isHighlighted","background","borderRadius","backgroundColor","fontSize","fontFamily","onChange","onSelect","md","max","min","rounded","CSVLink","headers","filename","columns","fixedHeader","fixedHeaderScrollHeight","show","centered","onHide","closeButton","Component","connect","BasicData","dispatch","getLeave","nAllUpd"],"sourceRoot":""}
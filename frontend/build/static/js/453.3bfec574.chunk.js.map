{"version":3,"file":"static/js/453.3bfec574.chunk.js","mappings":"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","sources":["pages/leave.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport DataTable from 'react-data-table-component';\r\nimport {\r\n  MDBCol,MDBContainer,MDBRow,MDBBtn,MDBBtnGroup\r\n} from 'mdb-react-ui-kit';\r\nimport { CSVLink } from \"react-csv\";\r\nimport {IoMdDownload} from 'react-icons/io'\r\nimport {Form,Modal} from 'react-bootstrap';\r\nimport { FaEdit,FaTrash } from \"react-icons/fa\";\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\n\r\nimport { nAllUpd } from '../store/Actions/BasicAction';\r\n\r\nclass LeaveDays extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth()+1 > 9 ? date.getMonth()+1 : '0'+(date.getMonth()+1);\r\n    let day = date.getDate() > 9 ? date.getDate() : '0'+date.getDate();\r\n    this.state = {\r\n      selView:1,\r\n      selYear:year,\r\n      selMonth:month,\r\n\r\n      from:year+'-'+month+'-'+day,\r\n      to:year+'-'+month+'-'+day,\r\n      selFilter:'',\r\n      selNurse:0,\r\n      selType:0,\r\n      isOpen:false,\r\n      modal:{\r\n        nurse_id:'',\r\n        leave_id:'',\r\n        type:'',\r\n        from:'',\r\n        to:'',\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  setDate = (target,e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      [target]:e.target.value\r\n    });\r\n  }\r\n  setModalDate = (target,e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      modal:{\r\n        ...this.state.modal,\r\n        [target]:e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  filterChange = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selFilter:e.target.value,\r\n    });\r\n  }\r\n\r\n  nurseSelect = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse:e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeNurse = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse:e.target.value,\r\n    });\r\n  }\r\n  onChangeType = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selType:e.target.value,\r\n    });\r\n  }\r\n  onChangeView = (target,e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      [target]:e.target.value,\r\n    });\r\n  }\r\n\r\n  addLeave = () =>{\r\n    var _self = this;\r\n    const {selNurse,selType,from,to} = this.state;\r\n    if(selNurse == 0){\r\n      toastr.info(\"Please select nurse!\");\r\n    }else{\r\n      this.setState({\r\n        selNurse:0,\r\n      });\r\n      \r\n      axios.post('leave/add',{\r\n        nurse_id:selNurse,\r\n        type:selType,\r\n        from:from,\r\n        to:to,\r\n      })\r\n      .then(function (response) {\r\n        toastr.info(\"Add LeaveDays Success!\");\r\n        _self.props.getLeave(response.data);\r\n      })\r\n      .catch(function (error) {\r\n      });\r\n    }\r\n  }\r\n\r\n  leaveModal = (isOpen,row) =>{\r\n    if(isOpen){\r\n      this.setState({\r\n        ...this.state,\r\n        isOpen:isOpen,\r\n        modal:{\r\n          nurse_id:row.nurse_id,\r\n          leave_id:row.leave_id,\r\n          type:row.type,\r\n          from:row.leave_start,\r\n          to:row.leave_end,\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        ...this.state,\r\n        isOpen:isOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  editConfirmLeave = () =>{\r\n    var _self = this;\r\n    this.setState({\r\n      isOpen:false,\r\n    });\r\n\r\n    axios.post('leave/edit',{\r\n      ...this.state.modal\r\n    })\r\n    .then(function (response) {\r\n      toastr.info(\"Modify LeaveDays Success!\");\r\n      _self.props.getLeave(response.data);\r\n    })\r\n    .catch(function (error) {\r\n    });\r\n  }\r\n\r\n  removeLeave = (row) =>{\r\n    var _self = this;\r\n    axios.post('leave/remove',{\r\n      nurse_id:row.nurse_id,\r\n      leave_id:row.leave_id,\r\n    })\r\n    .then(function (response) {\r\n      toastr.info(\"Remove LeaveDays Success!\");\r\n      _self.props.getLeave(response.data);\r\n    })\r\n    .catch(function (error) {\r\n    });\r\n  }\r\n  \r\n  getLeaveType(row) {\r\n    if(row.type == 1) {\r\n      row.leave_type = \"Annual Leave\";\r\n    } else if(row.type == 2) {\r\n      row.leave_type = \"Sick Leave\";\r\n    } else if(row.type == 3) {\r\n      row.leave_type = \"Maternity leave\";\r\n    } else if(row.type == 4) {\r\n      row.leave_type = \"Other Leave\";\r\n    }\r\n    return row.leave_type;\r\n  }\r\n\r\n  render() {\r\n    const {from,to,selNurse,selType,modal,isOpen,selView,selYear,selMonth\r\n      ,selFilter\r\n    } = this.state;\r\n    const {basic} =this.props;\r\n    let leaveColumns = [];\r\n    leaveColumns.push(\r\n    {\r\n      name: \"No\",\r\n      center:true,\r\n      wrap:true,\r\n      selector: (row) => row.no,\r\n    },\r\n    {\r\n      name: \"Image\",\r\n      center:true,\r\n      wrap:true,\r\n      width:'70px',\r\n      cell: (row) => <img src={row.image} style={{width:'30px',height:'40px'}} />\r\n    },\r\n    {\r\n      name: \"Staff ID\",\r\n      center:true,\r\n      wrap:true,\r\n      selector: (row) => row.nurse_short_id,\r\n    },\r\n    {\r\n      name: \"Staff Name\",\r\n      center:true,\r\n      selector: (row) => row.name,\r\n    });\r\n    if(selView == 1){\r\n      leaveColumns.push({\r\n          name: \"Leave Type\",\r\n          center:true,\r\n          selector: (row) => row.leave_type,\r\n        }, \r\n      {\r\n        name: \"Leave Start\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.leave_start,\r\n      },\r\n      {\r\n        name: \"Leave End\",\r\n        center:true,\r\n        selector: (row) => row.leave_end,\r\n      });\r\n    }else{\r\n      leaveColumns.push({\r\n        name: \"Leave Periods\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'300px',\r\n        selector: (row) => row.leave_periods,\r\n      });\r\n    }\r\n    leaveColumns.push({\r\n      name: \"Leave Days\",\r\n      center:true,\r\n      wrap:true,\r\n      selector: (row) => row.leave_days,\r\n    },\r\n    {\r\n      name: \"Daily Hours\",\r\n      center:true,\r\n      wrap:true,\r\n      selector: (row) => row.daily_hours,\r\n    },\r\n    {\r\n      name: \"Leave Hours\",\r\n      center:true,\r\n      wrap:true,\r\n      selector: (row) => row.leave_hours,\r\n    });\r\n    if(selView == 1){\r\n      leaveColumns.push({\r\n        name: \"Action\",\r\n        center:true,\r\n        wrap:true,\r\n        cell: (row) => [\r\n        <MDBBtnGroup key={row.leave_id}>\r\n          <MDBBtn outline  color='success' size=\"sm\" className='my-1 ms-1' onClick={() =>this.leaveModal(true,row)}><FaEdit /></MDBBtn>\r\n          <MDBBtn outline  color='success' size=\"sm\" className='my-1 me-1' onClick={() =>this.removeLeave(row)}><FaTrash /></MDBBtn>\r\n        </MDBBtnGroup>\r\n        ]\r\n      });\r\n    }\r\n\r\n    let leaveDatas = [];\r\n    let headers = [\r\n      { label: \"No\", key: \"no\" },\r\n      { label: \"Staff ID\", key: \"nurse_short_id\" },\r\n      { label: \"Staff Name\", key: \"name\" },\r\n      { label: \"Leave Type\", key: \"leave_type\" },\r\n      { label: \"Leave Start\", key: \"leave_start\" },\r\n      { label: \"Leave End\", key: \"leave_end\" },\r\n      { label: \"Leave Days\", key: \"leave_days\" },\r\n      { label: \"Daily Hours\", key: \"daily_hours\" },\r\n      { label: \"Leave Hours\", key: \"leave_hours\" }\r\n    ];\r\n\r\n    let rowCount = 0;\r\n    basic.nurses.map((nurse)=>{\r\n      let total_leave_days = 0;\r\n      let leave_periods = [];\r\n      nurse.leave.map((leave) =>{\r\n        let month = selYear+'-'+selMonth;\r\n        let daysInMonth = new Date(selYear,selMonth,0).getDate();\r\n        if(leave.from.startsWith(month) || leave.to.startsWith(month)){\r\n          let from = new Date(leave.from);\r\n          let to = new Date(leave.to);\r\n          let leave_days = Math.ceil((to - from) / (1000 * 60 * 60 * 24))+1;\r\n          if(selView == 2){\r\n            if(!leave.from.startsWith(month)){\r\n              leave_days = parseInt(leave.to.slice(8,10));\r\n              leave_periods.push('(1~'+parseInt(leave.to.slice(8))+\")\");\r\n            }else if(!leave.to.startsWith(month)){\r\n              leave_days = Math.ceil((new Date(selYear+'-'+selMonth+'-'+daysInMonth) - from) / (1000 * 60 * 60 * 24))+1;\r\n              leave_periods.push(\"(\"+parseInt(leave.from.slice(8))+'~'+daysInMonth+\")\");\r\n            }else{\r\n              leave_periods.push(\"(\"+parseInt(leave.from.slice(8))+'~'+parseInt(leave.to.slice(8))+\")\");\r\n            }\r\n            total_leave_days += leave_days;\r\n          }\r\n          if(selView == 1){\r\n            rowCount++;\r\n            leaveDatas.push({\r\n              no:rowCount,\r\n              image:nurse.image,\r\n              nurse_id:nurse._id,\r\n              nurse_short_id:nurse._id.slice(20),\r\n              name:nurse.name,\r\n              leave_type:this.getLeaveType(leave),\r\n              leave_id:leave.leave_id,\r\n              leave_start:leave.from,\r\n              leave_end:leave.to,\r\n              leave_days:leave_days,\r\n              daily_hours:8,\r\n              leave_hours:8*leave_days\r\n            });\r\n          }\r\n        }\r\n      });\r\n      if(selView == 2){\r\n        if(total_leave_days != 0){\r\n          rowCount++;\r\n          leaveDatas.push({\r\n            no:rowCount,\r\n            image:nurse.image,\r\n            nurse_id:nurse._id,\r\n            nurse_short_id:nurse._id.slice(20),\r\n            name:nurse.name,\r\n            leave_periods:leave_periods.join(\",\"),\r\n            leave_days:total_leave_days,\r\n            daily_hours:8,\r\n            leave_hours:8*total_leave_days\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    \r\n\r\n    let monthNames = basic.monthNames;\r\n    let Mon = Object.keys(monthNames);\r\n    let NoMon = Object.values(monthNames);\r\n    \r\n    const MonthSelect = Mon.map((month,index) =>\r\n      <option value={NoMon[index]}>{month}</option>\r\n    );\r\n\r\n    return (\r\n \r\n      <MDBContainer>\r\n          <div className=\"pt-5 text-center text-dark\">\r\n            <h1 className=\"mt-3\">LEAVE DAYS</h1>\r\n          </div>\r\n          <MDBRow className=\" align-items-center justify-content-center\">\r\n            <MDBCol md=\"2\" >\r\n              <Form.Group >\r\n                <Form.Select \r\n                aria-label=\"nurse select\"  required  value={selNurse} onChange = {(e) =>this.onChangeNurse(e)}>\r\n                <option value=\"0\" >Select Nurse</option>\r\n                \r\n                {\r\n                  basic.nurses.map((value,index) =>{\r\n                    return <option key = {index} value={value._id}>{value.name}</option>\r\n                  })\r\n                }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                <Form.Select aria-label=\"nurse select\" value={selType} onChange = {(e) =>this.onChangeType(e)}>\r\n                <option value=\"\" >Select Here</option>\r\n                <option value=\"1\" >Annual leave</option>\r\n                <option value=\"2\" >sick leave</option>\r\n                <option value=\"3\" >Maternity leave</option>\r\n                <option value=\"4\" >Other Leave</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                    <Form.Control type=\"date\" value={from} max={to}  onChange = {(e) =>this.setDate('from',e)} />\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                    <Form.Control type=\"date\" value={to} min={from}  onChange = {(e) =>this.setDate('to',e)} />\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <MDBBtn outline rounded  color='success' onClick={() =>this.addLeave()}>Add Leave</MDBBtn>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow className=\"mt-3 align-items-center justify-content-center\">\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                <Form.Select aria-label=\"nurse select\" value={selView} onChange = {(e) =>this.onChangeView('selView',e)}>\r\n                <option value=\"1\" >View Per Record</option>\r\n                <option value=\"2\" >View Per Nurse</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                <Form.Control type=\"number\" value={selYear} min = {2000} onChange = {(e) =>this.onChangeView('selYear',e)}/>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Select aria-label=\"select\" value={selMonth} onChange = {(e) =>this.onChangeView('selMonth',e)}>\r\n                {\r\n                  MonthSelect\r\n                }\r\n              </Form.Select>\r\n            </MDBCol>\r\n            <MDBCol md=\"3\" className=\"float-right\" >\r\n              <CSVLink\r\n                headers={headers}\r\n                data={leaveDatas}\r\n                filename={\"leavedays.csv\"}\r\n                className=\"btn btn-success \"\r\n                target=\"_blank\"\r\n                >\r\n                <IoMdDownload />Export \r\n              </CSVLink>\r\n           </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow className='mt-2'>\r\n            <DataTable\r\n                columns={leaveColumns} \r\n                data={leaveDatas}\r\n                fixedHeader\r\n                fixedHeaderScrollHeight={'60vh'}\r\n            />\r\n          </MDBRow>\r\n          <Modal show={isOpen}\r\n            size=\"sm\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={() => this.leaveModal(false)}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Leave Modify</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <Form.Control type=\"date\" value={modal.from} max={modal.to}  onChange = {(e) =>this.setModalDate('from',e)} />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow className=\"mt-2\">\r\n                <MDBCol>\r\n                  <Form.Control type=\"date\" value={modal.to} min={modal.from}  onChange = {(e) =>this.setModalDate('to',e)} />\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <MDBBtn  color='secondary' onClick={() => this.leaveModal(false)}>\r\n                Close\r\n              </MDBBtn>\r\n              <MDBBtn  color='success' onClick={() => this.editConfirmLeave()}>\r\n                Save\r\n              </MDBBtn>\r\n            </Modal.Footer>\r\n          </Modal> \r\n      </MDBContainer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getLeave:(data) =>dispatch(nAllUpd(data))\r\n});\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic:BasicData.BasicData\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LeaveDays)"],"names":["LeaveDays","props","setDate","target","e","setState","state","value","setModalDate","modal","filterChange","selFilter","nurseSelect","selNurse","onChangeNurse","onChangeType","selType","onChangeView","addLeave","_self","from","to","toastr","axios","nurse_id","type","then","response","getLeave","data","catch","error","leaveModal","isOpen","row","leave_id","leave_start","leave_end","editConfirmLeave","removeLeave","date","Date","year","getFullYear","month","getMonth","day","getDate","selView","selYear","selMonth","leave_type","this","basic","leaveColumns","push","name","center","wrap","selector","no","width","cell","src","image","style","height","nurse_short_id","leave_periods","leave_days","daily_hours","leave_hours","outline","color","size","className","onClick","leaveDatas","rowCount","nurses","map","nurse","total_leave_days","leave","daysInMonth","startsWith","Math","ceil","parseInt","slice","_id","getLeaveType","join","monthNames","Mon","Object","keys","NoMon","values","MonthSelect","index","md","required","onChange","max","min","rounded","CSVLink","headers","label","key","filename","columns","fixedHeader","fixedHeaderScrollHeight","show","centered","onHide","closeButton","Component","connect","BasicData","dispatch","nAllUpd"],"sourceRoot":""}
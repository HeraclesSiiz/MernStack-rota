{"version":3,"file":"static/js/600.aeab1ae8.chunk.js","mappings":"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","sources":["pages/fte.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DataTableSelected from 'react-data-table-component';\r\nimport {\r\n  MDBCol,MDBContainer,MDBRow,  \r\n  MDBModalHeader\r\n  \r\n} from 'mdb-react-ui-kit';\r\nimport {Button, Form,OverlayTrigger,Tooltip} from 'react-bootstrap';\r\n\r\nclass FTE extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      let date = new Date();\r\n      let year = date.getFullYear();\r\n      let month = date.getMonth()+1 > 9 ? date.getMonth()+1 : '0'+(date.getMonth()+1);\r\n      let day = new Date(year,month,0).getDate();\r\n      \r\n      this.state = {\r\n        selYear:year,\r\n        selMonth:'00',\r\n        type:0,\r\n        from:year+'-'+month+'-'+'01',\r\n        to:year+'-'+month+'-'+day,\r\n        selNurse:0,\r\n        selDesignation:-1\r\n      };\r\n  }\r\n  componentDidMount() {\r\n  }\r\n\r\n  onChangeYear = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selYear:e.target.value,\r\n    });\r\n  }\r\n  setDate = (target,e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      [target]:e.target.value\r\n    });\r\n  }\r\n    onChangeNurse = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selNurse:e.target.value,\r\n    });\r\n  }\r\n  onChangeMonth = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selMonth:e.target.value,\r\n    });\r\n  }\r\n  onChangeDesignation = (e) =>{\r\n    this.setState({\r\n      ...this.state,\r\n      selDesignation:e.target.value,\r\n    });\r\n  }\r\n  \r\n \r\n  swap(json){\r\n    let ret = [];\r\n    for(var key in json){\r\n      ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render() {\r\n    const {selYear,selMonth,from,to,selDesignation, selNurse} = this.state;\r\n    const {basic} =this.props;\r\n\r\n    let monthNames = basic.monthNames;\r\n    let monthNumbers = this.swap(monthNames);\r\n    let Mon = Object.keys(monthNames);\r\n    let NoMon = Object.values(monthNames);   \r\n    const MonthSelect = Mon.map((month,index) =>\r\n      <option value={NoMon[index]}>{month}</option>\r\n    );\r\n\r\n    \r\n    let FTEColumns = [\r\n      {\r\n        name: \"Emp Code\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.code,\r\n      },\r\n      {\r\n        name: \"Name\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'120px',\r\n        selector: (row) => row.name,\r\n      },\r\n      {\r\n        name: \"Designation\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.designation,\r\n      },\r\n      {\r\n         name: \"Month(D)\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.days,\r\n      },\r\n    //   {\r\n    //     name: \"Date\",\r\n    //    center:true,\r\n    //    wrap:true,\r\n    //    width:'100px',\r\n    //    selector: (row) => row.date,\r\n    //  },\r\n      {\r\n        name: \"Sundays\",\r\n        center:true,\r\n        selector: (row) => row.sundays,\r\n      },\r\n      {\r\n        name: \"Holidays\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'100px',\r\n        selector: (row) => row.holidays,\r\n      },\r\n      {\r\n        name: \"Leave Days\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.leavedays,\r\n      },\r\n\r\n      {\r\n        name: \"Net Working Days\",\r\n        center:true,\r\n        selector: (row) => row.workingdays,\r\n      },\r\n      {\r\n        name: \"Working(HA\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'80px',\r\n        selector: (row) => row.totalhours,\r\n      },\r\n      {\r\n        name: \"daily Hours\",\r\n        center:true,\r\n        wrap:true,\r\n        selector: (row) => row.hours,\r\n      },\r\n           {\r\n        name: \"Worked(h)\",\r\n        center:true,\r\n        wrap:true,\r\n        width:'80px',\r\n        selector: (row) => row.hour,\r\n      },\r\n      {\r\n          name: \"Overtime\",\r\n          center:true,\r\n          wrap:true,\r\n          width:'120px',\r\n          selector: (row) => row.hour - row.hours,\r\n        },\r\n    ];\r\n \r\n  \r\n    let FTEDatas = [];\r\n    if(selYear <= new Date().getFullYear()){\r\n      basic.nurses.map((nurse) =>{\r\n        if(selNurse == \"0\" || parseInt(nurse._id) == selNurse){\r\n        // if(selDesignation == \"-1\" || parseInt(nurse.level) == selDesignation){\r\n         \r\n    let leaves = [];\r\n\r\n    let leavedaysPerMonth = [];\r\n        basic.nurses.map(nurse =>{\r\n      if(nurse._id == selNurse){\r\n        leaves = nurse.leave;\r\n      }\r\n    });\r\n    //show data per individual\r\n    let dates = [];\r\n    for (var d = new Date(from); d <= new Date(to); d.setDate(d.getDate() + 1)) {\r\n        let year = d.getFullYear();\r\n        let month = d.getMonth()+1 > 9 ? d.getMonth()+1 : '0'+(d.getMonth()+1);\r\n        let day = d.getDate() > 9 ? d.getDate() : '0'+d.getDate();\r\n        let dateFormat = year+'-'+month+'-'+day;\r\n        dates.push(dateFormat);\r\n      }\r\n   \r\n    basic.nurses.map(nurse =>{\r\n      if(nurse._id == selNurse){\r\n    for(let leave of leaves){\r\n      let from = new Date(leave.from);\r\n      let to = new Date(leave.to);\r\n      for(let betweenDay = from;betweenDay <= to;){\r\n        let year = betweenDay.getFullYear();\r\n        let month = betweenDay.getMonth()+1>9?betweenDay.getMonth()+1:'0'+(betweenDay.getMonth()+1);\r\n        let day = betweenDay.getDate()>9?betweenDay.getDate():'0'+betweenDay.getDate();\r\n        if(year == selYear){\r\n          let key = monthNumbers[month];\r\n          if(leavedaysPerMonth[key] == undefined){leavedaysPerMonth[key] = [];}\r\n          leavedaysPerMonth[key].push(year+'-'+month+'-'+day);\r\n        }\r\n        betweenDay.setDate(betweenDay.getDate() + 1);\r\n      }\r\n    }\r\n  }\r\n});\r\n    //get holidays per month\r\n    let holidays = basic.holidays;\r\n    let holidaysPerMonth = [];\r\n    holidays.map(holiday =>{\r\n      let key = monthNumbers[holiday.slice(0,2)];\r\n      if(holidaysPerMonth[key] == undefined){holidaysPerMonth[key] = [];}\r\n      holidaysPerMonth[key].push(selYear+'-'+holiday);\r\n    });\r\n    //get sundays per month\r\n    let sundaysPerMonth = [];\r\n    for(let selMonth in monthNumbers){\r\n      let daysInMonth = new Date(selYear, selMonth, 0).getDate();\r\n      let date = selYear+'-'+selMonth+'-01';\r\n      let firstDate = new Date(date).getDay();\r\n      if(firstDate == 0){firstDate = 1}else{firstDate = 7-firstDate+1}\r\n      for(let selDay = firstDate;selDay < daysInMonth;selDay+=7){\r\n        let day = selDay > 9?selDay:'0'+selDay;\r\n        \r\n        let key = monthNumbers[selMonth];\r\n        if(sundaysPerMonth[key] == undefined){sundaysPerMonth[key] = [];}\r\n        sundaysPerMonth[key].push(selYear+'-'+selMonth+'-'+day);\r\n      }\r\n    }\r\n    \r\n\r\n    for(let selMonth in monthNames){\r\n      let daysInMonth = new Date(selYear, monthNames[selMonth], 0).getDate();\r\n\r\n      if(leavedaysPerMonth[selMonth] == undefined){leavedaysPerMonth[selMonth] = [];}\r\n      if(holidaysPerMonth[selMonth] == undefined){holidaysPerMonth[selMonth] = [];}\r\n      if(sundaysPerMonth[selMonth] == undefined){sundaysPerMonth[selMonth] = [];}\r\n      let offDays = [\r\n        ...leavedaysPerMonth[selMonth],\r\n        ...holidaysPerMonth[selMonth],\r\n        ...sundaysPerMonth[selMonth]];\r\n      offDays = [...new Set(offDays)];\r\n\r\n      nurse.rota.map((rota)=>{\r\n        if(rota.date){\r\n      let row={\r\n        month:selMonth,\r\n        code: nurse.code,\r\n        hour:rota.hour,\r\n        date:rota.date,\r\n        name: nurse.name,\r\n        days:daysInMonth,\r\n        designation : nurse.level==0?\"Registered\":\"Assistant\",\r\n        sundays:sundaysPerMonth[selMonth].length,\r\n        holidays:holidaysPerMonth[selMonth].length,\r\n        leavedays:leavedaysPerMonth[selMonth].length,\r\n        workingdays:daysInMonth - offDays.length,\r\n        hours:8,\r\n        totalhours:8*(daysInMonth - offDays.length)\r\n      };\r\n   \r\n            FTEDatas.push(row);\r\n    }\r\n          });\r\n    } \r\n          }\r\n        \r\n          }\r\n        \r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <MDBContainer>\r\n          <div className=\"pt-5 text-center text-dark\">\r\n            <h1 className=\"mt-3\">(FTE)</h1>\r\n          </div>\r\n          <MDBRow className=\" align-items-center justify-content-center\">\r\n            <MDBCol md=\"2\">\r\n              <Form.Select aria-label=\"select\" value={selDesignation} onChange = {(e) =>this.onChangeDesignation(e)}>\r\n                <option value=\"-1\">All</option>\r\n                <option value=\"0\">Registered</option>\r\n                <option value=\"1\">Assistant</option>\r\n              </Form.Select>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n            <Form.Group>\r\n                    <Form.Select aria-label=\"select\" value={selNurse} onChange = {(e) =>this.onChangeNurse(e)}>\r\n                      <option value=\"0\" >Select Nurse</option>\r\n                      {\r\n                        basic.nurses.map((value,index) =>{\r\n                          return <option key = {index} value={value._id}>{value.name}</option>\r\n                        })\r\n                      }\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Group>\r\n                <Form.Control type=\"number\" value={selYear} placeholder=\"Year\" onChange = {(e) =>this.onChangeYear(e)}/>\r\n              </Form.Group>\r\n            </MDBCol>\r\n            <MDBCol md=\"2\">\r\n              <Form.Select aria-label=\"select\" value={selMonth} onChange = {(e) =>this.onChangeMonth(e)}>\r\n                <option value=\"00\">Month</option>\r\n                {\r\n                  MonthSelect\r\n                }\r\n              </Form.Select>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <  MDBModalHeader>   \r\n            <DataTableSelected\r\n                columns={FTEColumns} \r\n                data={FTEDatas}\r\n                fixedHeader\r\n                striped\r\n                fixedHeaderScrollHeight={'60vh'}\r\n            />\r\n          </MDBModalHeader>\r\n      </MDBContainer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (BasicData) => ({\r\n  basic:BasicData.BasicData\r\n});\r\nexport default connect(mapStateToProps,null)(FTE)","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["FTE","props","onChangeYear","e","setState","state","selYear","target","value","setDate","onChangeNurse","selNurse","onChangeMonth","selMonth","onChangeDesignation","selDesignation","date","Date","year","getFullYear","month","getMonth","day","getDate","type","from","to","json","ret","key","this","basic","monthNames","monthNumbers","swap","Mon","Object","keys","NoMon","values","MonthSelect","map","index","FTEDatas","nurses","nurse","d","parseInt","_id","leaves","leavedaysPerMonth","leave","dates","dateFormat","push","betweenDay","undefined","holidays","holidaysPerMonth","holiday","slice","sundaysPerMonth","daysInMonth","firstDate","getDay","selDay","offDays","Set","rota","row","code","hour","name","days","designation","level","sundays","length","leavedays","workingdays","hours","totalhours","className","md","onChange","placeholder","columns","center","wrap","width","selector","data","fixedHeader","striped","fixedHeaderScrollHeight","Component","connect","BasicData","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}